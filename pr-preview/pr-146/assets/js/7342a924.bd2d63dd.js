"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[59967],{86145:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var i=t(74848),a=t(28453),r=t(11470),o=t(19365);const l={},s="Getting started with Media3 on Android",d={id:"how-to-guides/android/media3/getting-started",title:"Getting started with Media3 on Android",description:"The THEOplayer Android Media3 pipeline is a new integration within our Android SDK that serves as a new and rebuilt base layer for playback of video and audio files.",source:"@site/theoplayer/how-to-guides/android/media3/getting-started.mdx",sourceDirName:"how-to-guides/android/media3",slug:"/how-to-guides/android/media3/getting-started",permalink:"/documentation/pr-preview/pr-146/theoplayer/how-to-guides/android/media3/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/THEOplayer/documentation/blob/-/theoplayer/how-to-guides/android/media3/getting-started.mdx",tags:[],version:"current",frontMatter:{},sidebar:"android",previous:{title:"Introduction",permalink:"/documentation/pr-preview/pr-146/theoplayer/how-to-guides/objective-C/introduction"},next:{title:"Getting started with Millicast on Android",permalink:"/documentation/pr-preview/pr-146/theoplayer/how-to-guides/android/millicast/getting-started"}},c={},u=[{value:"Usage",id:"usage",level:2},{value:"Add the Media3 integration dependency",id:"add-the-media3-integration-dependency",level:3},{value:"Add the Media3 integration to the player",id:"add-the-media3-integration-to-the-player",level:3},{value:"Known limitations",id:"known-limitations",level:2},{value:"FAQ",id:"faq",level:2},{value:"When should I use the Media3 integration?",id:"when-should-i-use-the-media3-integration",level:3},{value:"How does this integration affect the THEOplayer Android SDK?",id:"how-does-this-integration-affect-the-theoplayer-android-sdk",level:3},{value:"Does this integration use Exoplayer?",id:"does-this-integration-use-exoplayer",level:3},{value:"Will this integration replace the current THEO Android playback pipeline?",id:"will-this-integration-replace-the-current-theo-android-playback-pipeline",level:3},{value:"More information",id:"more-information",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"getting-started-with-media3-on-android",children:"Getting started with Media3 on Android"})}),"\n",(0,i.jsxs)(n.p,{children:["The THEOplayer Android Media3 pipeline is a new integration within our Android SDK that serves as a new and rebuilt base layer for playback of video and audio files.\nIt is based on ",(0,i.jsx)(n.a,{href:"https://developer.android.com/media/media3",children:"Jetpack Media3"})," components, and it provides more stable playback covering a broader range of use cases, all while being lighter in size and more performant.\nNote that the integration is still under active development, see ",(0,i.jsx)(n.a,{href:"#known-limitations",children:"the Known limitations section"})," for more information."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Follow ",(0,i.jsx)(n.a,{href:"/documentation/pr-preview/pr-146/theoplayer/getting-started/sdks/android/getting-started",children:"our Getting Started guide"}),"\nto set up THEOplayer in your Android app."]}),"\n",(0,i.jsxs)(n.li,{children:["Add the Media3 integration as a dependency in your module-level ",(0,i.jsx)(n.code,{children:"build.gradle"})," file."]}),"\n",(0,i.jsx)(n.li,{children:"Add the Media3 integration to the player."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"add-the-media3-integration-dependency",children:"Add the Media3 integration dependency"}),"\n",(0,i.jsxs)(n.p,{children:["Given that the Media3 integration is under active development, it is currently still published to our ",(0,i.jsx)(n.code,{children:"snapshots"})," repository, so add the THEOplayer ",(0,i.jsx)(n.code,{children:"snapshots"})," Maven repository in your ",(0,i.jsx)(n.strong,{children:"top-level"})," (project) ",(0,i.jsx)(n.code,{children:"settings.gradle.kts"})," file."]}),"\n",(0,i.jsxs)(r.A,{queryString:"lang",children:[(0,i.jsx)(o.A,{value:"groovy",label:"Groovy",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:'dependencyResolutionManagement {\n    repositories {\n        google()\n        mavenCentral()\n        maven { url "https://maven.theoplayer.com/releases" }\n        // highlight-next-line\n        maven { url "https://maven.theoplayer.com/snapshots" }\n    }\n}\n'})})}),(0,i.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'dependencyResolutionManagement {\n    repositories {\n        google()\n        mavenCentral()\n        maven { url = uri("https://maven.theoplayer.com/releases") }\n        // highlight-next-line\n        maven { url = uri("https://maven.theoplayer.com/snapshots") }\n    }\n}\n'})})})]}),"\n",(0,i.jsxs)(n.p,{children:["Add the Media3 integration as a dependency in your module-level ",(0,i.jsx)(n.code,{children:"build.gradle"})," file:"]}),"\n",(0,i.jsxs)(r.A,{queryString:"lang",children:[(0,i.jsx)(o.A,{value:"groovy",label:"Groovy",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:'dependencies {\n  implementation "com.theoplayer.theoplayer-sdk-android:core:8.+"\n  // highlight-next-line\n  implementation "com.theoplayer.theoplayer-sdk-android:integration-media3:8.+"\n}\n'})})}),(0,i.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'dependencies {\n  implementation("com.theoplayer.theoplayer-sdk-android:core:8.+")\n  // highlight-next-line\n  implementation("com.theoplayer.theoplayer-sdk-android:integration-media3:8.+")\n}\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"add-the-media3-integration-to-the-player",children:"Add the Media3 integration to the player"}),"\n",(0,i.jsxs)(n.p,{children:["To make use of the Media3 integration, create and add the ",(0,i.jsx)(n.code,{children:"Media3PlayerIntegration"})," to your ",(0,i.jsx)(n.code,{children:"THEOplayerView"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"val media3PlayerIntegration = Media3PlayerIntegration.createMedia3PlayerIntegration();\ntheoplayerView.player.addIntegration(media3PlayerIntegration);\n"})}),"\n",(0,i.jsx)(n.p,{children:"From the moment the Media3PlayerIntegration is added, all subsequent sources set will use our Media3 pipeline to play."}),"\n",(0,i.jsxs)(r.A,{queryString:"lang",children:[(0,i.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'val typedSource = TypedSource\n.Builder("https://cdn.theoplayer.com/video/dash/big_buck_bunny/BigBuckBunny_10s_simple_2014_05_09.mpd")\n.type(SourceType.DASH)\n.build()\n\nval sourceDescription = SourceDescription\n.Builder(typedSource)\n.build()\n\ntheoPlayerView.player.source = sourceDescription\n'})})}),(0,i.jsx)(o.A,{value:"java",label:"Java",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'TypedSource typedSource = new TypedSource\n.Builder("https://cdn.theoplayer.com/video/dash/big_buck_bunny/BigBuckBunny_10s_simple_2014_05_09.mpd")\n.type(SourceType.DASH)\n.build();\n\nSourceDescription sourceDescription = new SourceDescription\n.Builder(typedSource)\n.build();\n\ntheoPlayerView.getPlayer().setSource(sourceDescription);\n'})})})]}),"\n",(0,i.jsxs)(n.p,{children:["By default, the ",(0,i.jsx)(n.code,{children:"Media3PlayerIntegration"})," will play all types of sources except HESP and Millicast.\nTo modify the default behaviour, it's possible to pass an implementation of the ",(0,i.jsx)(n.code,{children:"Media3PlayerIntegration.SourceSelectCallback"}),"\ninterface while creating the Integration."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"val media3PlayerIntegration = createMedia3PlayerIntegration(Media3PlayerIntegration.SourceSelectCallback { selectedSource, source ->\n    // selectedSource -> represents the TypedSource the player picked to play.\n    // source -> represents the SourceDescription passed to the player.\n    // return true -> the Media3 integration pipeline will be used to play the selected source.\n    // return false -> the default pipeline will be used to play the selected source.\n})\ntheoplayerView.player.addIntegration(media3PlayerIntegration);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"known-limitations",children:"Known limitations"}),"\n",(0,i.jsx)(n.p,{children:"As this integration is still under development, there are currently some known limitations and features that are still under development and not yet supported:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The preload, ABR, network, metrics latency and caching / offline playback APIs are not yet implemented and return dummy values."}),"\n",(0,i.jsx)(n.li,{children:"HESP/THEOlive and Millicast playback are not yet supported, and will fall back to our existing playback pipeline."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TextTrack.cues"}),", ",(0,i.jsx)(n.code,{children:"TextTrack.activeCues"})," and cue-related events are not yet supported. Although subtitles do render correctly to the screen, the content of these subtitles is not yet exposed through our API."]}),"\n",(0,i.jsx)(n.li,{children:"Certain player and source configuration parameters are not yet handled."}),"\n",(0,i.jsx)(n.li,{children:"Certain player events may not yet be dispatched correctly."}),"\n",(0,i.jsx)(n.li,{children:"There are some known issues with video track and quality switching."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,i.jsx)(n.h3,{id:"when-should-i-use-the-media3-integration",children:"When should I use the Media3 integration?"}),"\n",(0,i.jsx)(n.p,{children:"The Media3 integration is being built to improve stability and performance, so if your usecase is targeting performance restricted devices or you target broad coverage and have encountered playback issues on particular device segments we recommend trying out the Media3 integration."}),"\n",(0,i.jsx)(n.h3,{id:"how-does-this-integration-affect-the-theoplayer-android-sdk",children:"How does this integration affect the THEOplayer Android SDK?"}),"\n",(0,i.jsxs)(n.p,{children:["This integration replaces the media playback base layer of the THEOplayer Android SDK, offering improvements in performance and stability for playback over our current implementation. As only core media playback is affected, all player API remains identical and other features such as ad or analytics integrations or the chromecast integration are not affected and will function the same. See ",(0,i.jsx)(n.a,{href:"#known-limitations",children:"the Known limitations section"})," for more info on what features might currently be affected."]}),"\n",(0,i.jsx)(n.h3,{id:"does-this-integration-use-exoplayer",children:"Does this integration use Exoplayer?"}),"\n",(0,i.jsx)(n.p,{children:"While we make use of Exoplayer components, this is not a plain Exoplayer implementation. In addition to the additional integrations, features and support already offered by the THEOplayer Android SDK, we've reused what makes sense to implement our own playback pipeline that offers improvements, bugfixes and additional functionality over Exoplayer."}),"\n",(0,i.jsx)(n.h3,{id:"will-this-integration-replace-the-current-theo-android-playback-pipeline",children:"Will this integration replace the current THEO Android playback pipeline?"}),"\n",(0,i.jsx)(n.p,{children:"We are developing this integration to offer significant improvements over our current playback implementation on Android. While currently this is still under development, the goal is for this pipeline to become the default playback pipeline for the THEOplayer Android SDK in the future."}),"\n",(0,i.jsx)(n.h3,{id:""}),"\n",(0,i.jsx)(n.h2,{id:"more-information",children:"More information"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"pathname:///theoplayer/v8/api-reference/android/com/theoplayer/android/api/media3/package-summary.html",children:"API references"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var i=t(34164);const a={tabItem:"tabItem_Ymn6"};var r=t(74848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(a.tabItem,o),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>w});var i=t(96540),a=t(34164),r=t(23104),o=t(56347),l=t(205),s=t(57485),d=t(31682),c=t(70679);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:a}}=e;return{value:n,label:t,attributes:i,default:a}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=h(e),[o,s]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r}))),[d,u]=m({queryString:t,groupId:a}),[g,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,c.Dv)(t);return[a,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),f=(()=>{const e=d??g;return p({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{f&&s(f)}),[f]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),y(e)}),[u,y,r]),tabValues:r}}var y=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function b(e){let{className:n,block:t,selectedValue:i,selectValue:o,tabValues:l}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=s.indexOf(n),a=l[t].value;a!==i&&(d(n),o(a))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>s.push(e),onKeyDown:u,onClick:c,...r,className:(0,a.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function j(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,v.jsx)(b,{...n,...e}),(0,v.jsx)(x,{...n,...e})]})}function w(e){const n=(0,y.A)();return(0,v.jsx)(j,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(96540);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);